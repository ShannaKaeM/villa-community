# Colors in Tailwind CSS: Simple Guide

## How Colors Work in Tailwind

Tailwind comes with a beautiful color palette out of the box. Each color has different shades numbered from 50 (lightest) to 950 (darkest).

You use these colors by adding utility classes to your HTML elements. The class name pattern is:

```
{property}-{color}-{shade}
```

For example: `bg-blue-500`, `text-red-700`, or `border-green-300`.

## Color Utility Types

You can use colors with many different utilities:

### Text and Background Colors
- **Background**: `bg-blue-500` - Sets the background color
- **Text**: `text-red-600` - Sets the text color
- **Text Decoration**: `decoration-green-500` - Sets the underline/overline color
- **Placeholder Text**: `placeholder-gray-400` - Sets color of placeholder text in inputs

### Border and Outline Colors
- **Border**: `border-green-300` - Sets all border colors
- **Border-X**: `border-x-blue-300` - Sets left and right border colors
- **Border-Y**: `border-y-blue-300` - Sets top and bottom border colors
- **Border-Top**: `border-t-blue-300` - Sets top border color
- **Border-Right**: `border-r-blue-300` - Sets right border color
- **Border-Bottom**: `border-b-blue-300` - Sets bottom border color
- **Border-Left**: `border-l-blue-300` - Sets left border color
- **Outline**: `outline-purple-400` - Sets outline color
- **Ring**: `ring-indigo-500` - Adds a ring with specified color
- **Ring Offset**: `ring-offset-blue-200` - Sets the color of the ring offset

### Shadow Colors
- **Box Shadow**: `shadow-blue-500/50` - Sets box shadow color
- **Inset Shadow**: `inset-shadow-blue-500` - Sets inset shadow color
- **Ring Shadow**: `ring-blue-500` - Sets ring shadow color
- **Inset Ring Shadow**: `inset-ring-blue-500` - Sets inset ring shadow color
- **Drop Shadow**: `drop-shadow-blue-500` - Sets filter: drop-shadow() color

### SVG Colors
- **Fill**: `fill-yellow-500` - Sets SVG fill color
- **Stroke**: `stroke-pink-500` - Sets SVG stroke color

### Form Element Colors
- **Accent**: `accent-blue-600` - Sets accent color for form controls
- **Caret**: `caret-red-500` - Sets text cursor color
- **Checkbox/Radio**: `checked:bg-blue-500` - Sets color when checked

### Gradient Colors
- **From**: `from-blue-500` - Sets the starting color of a gradient
- **Via**: `via-purple-500` - Sets the middle color of a gradient
- **To**: `to-pink-500` - Sets the ending color of a gradient

### Divide Colors
- **Divide**: `divide-gray-200` - Sets the color between divided elements

### Other Color Utilities
- **Backdrop**: `backdrop-blue-500` - Sets backdrop filter color
- **Selection**: `selection:bg-blue-500` - Sets text selection background color

## Adjusting Color Opacity

You can make any color semi-transparent by adding a slash and opacity value:

```html
<div class="bg-blue-500/50">
  This has a blue background at 50% opacity
</div>
```

This works with any color utility:
- `text-black/75` (75% opaque black text)
- `border-indigo-600/25` (25% opaque indigo border)
- `shadow-red-500/40` (40% opaque red shadow)

## Using Colors with Dark Mode

Combine colors with dark mode by using the `dark:` prefix:

```html
<div class="bg-white text-black dark:bg-gray-800 dark:text-white">
  This changes colors in dark mode
</div>
```

## Customizing Colors in Your Theme

### Adding New Colors

Add your own custom colors using the `@theme` directive:

```css
@import "tailwindcss";
@theme {
  --color-primary: #3b82f6;
  --color-secondary: #10b981;
  --color-accent: #8b5cf6;
}
```

Now you can use these colors with any utility:
- `bg-primary`
- `text-secondary`
- `border-accent`

### Overriding Default Colors

You can replace Tailwind's default colors with your own:

```css
@import "tailwindcss";
@theme {
  --color-blue-500: #1e40af; /* Different shade of blue */
}
```

### Creating a Completely Custom Palette

If you want to start from scratch:

```css
@import "tailwindcss";
@theme {
  --color-*: initial; /* Remove all default colors */
  
  /* Add your own colors */
  --color-brand: #8b5cf6;
  --color-accent: #10b981;
  --color-warning: #f59e0b;
  --color-danger: #ef4444;
}
```

## Using Colors in CSS

Tailwind exposes all colors as CSS variables that you can use in your custom CSS:

```css
.my-custom-element {
  background-color: var(--color-blue-500);
  border-color: var(--color-gray-300);
}
```

You can also adjust opacity with the `--alpha()` function:

```css
.my-element {
  background-color: --alpha(var(--color-blue-500) / 50%);
}
```

## WordPress Integration Tips

When using Tailwind colors with WordPress:

1. **Theme.json Colors**: Map your WordPress theme.json colors to Tailwind colors for consistency

2. **Block Editor Support**: Use the same color utilities in your block templates and editor styles

3. **Dark Mode**: Combine WordPress's dark mode detection with Tailwind's dark variant

4. **Custom Properties**: Use CSS variables from theme.json as Tailwind color values:

```css
@theme {
  --color-primary: var(--wp--preset--color--primary);
}
```

This approach gives you a consistent color system across your entire WordPress site!
