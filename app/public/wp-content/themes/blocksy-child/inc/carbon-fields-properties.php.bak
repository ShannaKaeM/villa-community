<?php
/**
 * Carbon Fields Property Fields
 * 
 * Registers all Carbon Fields for the property post type
 */

// Don't allow direct access
if (!defined('ABSPATH')) {
    exit;
}

// Check if Carbon Fields is available
if (!class_exists('\Carbon_Fields\Container') || !class_exists('\Carbon_Fields\Field')) {
    add_action('admin_notices', function() {
        echo '<div class="error"><p>Carbon Fields is not installed or activated. Please install and activate the Carbon Fields plugin before using this feature.</p></div>';
    });
    return;
}

// Check if Carbon Fields is properly initialized
if (!function_exists('carbon_get_post_meta') || !function_exists('carbon_get_theme_option')) {
    add_action('admin_notices', function() {
        echo '<div class="error"><p>Carbon Fields functions are not available. Please make sure Carbon Fields is properly initialized.</p></div>';
    });
    return;
}

// IMPORTANT: Carbon Fields is now properly initialized and this file should be active

use Carbon_Fields\Container;
use Carbon_Fields\Field;

/**
 * Register property fields
 */
function mi_register_property_fields() {
    Container::make('post_meta', __('Property Details', 'blocksy-child'))
        ->where('post_type', '=', 'property')
        ->set_context('normal')
        ->set_priority('high')
        ->add_tab(__('Location', 'blocksy-child'), [
            Field::make('text', 'property_address', __('Address', 'blocksy-child'))
                ->set_required(true)
                ->set_help_text(__('Full street address of the property', 'blocksy-child')),
            
            Field::make('text', 'property_city', __('City', 'blocksy-child'))
                ->set_required(true)
                ->set_help_text(__('City where the property is located', 'blocksy-child')),
            
            Field::make('text', 'property_state', __('State/Province', 'blocksy-child'))
                ->set_required(true)
                ->set_help_text(__('State or province where the property is located', 'blocksy-child')),
            
            Field::make('text', 'property_zip', __('ZIP/Postal Code', 'blocksy-child'))
                ->set_help_text(__('ZIP or postal code of the property', 'blocksy-child')),
            
            Field::make('text', 'property_latitude', __('Latitude', 'blocksy-child'))
                ->set_help_text(__('Latitude coordinates for map display', 'blocksy-child')),
            
            Field::make('text', 'property_longitude', __('Longitude', 'blocksy-child'))
                ->set_help_text(__('Longitude coordinates for map display', 'blocksy-child')),
        ])
        ->add_tab(__('Property Details', 'blocksy-child'), [
            Field::make('text', 'property_bedrooms', __('Bedrooms', 'blocksy-child'))
                ->set_required(true)
                ->set_attribute('type', 'number')
                ->set_attribute('min', '0')
                ->set_attribute('step', '1')
                ->set_help_text(__('Number of bedrooms in the property', 'blocksy-child')),
            
            Field::make('text', 'property_bathrooms', __('Bathrooms', 'blocksy-child'))
                ->set_required(true)
                ->set_attribute('type', 'number')
                ->set_attribute('min', '0')
                ->set_attribute('step', '0.5')
                ->set_help_text(__('Number of bathrooms in the property', 'blocksy-child')),
            
            Field::make('text', 'property_max_guests', __('Maximum Guests', 'blocksy-child'))
                ->set_required(true)
                ->set_attribute('type', 'number')
                ->set_attribute('min', '0')
                ->set_attribute('step', '1')
                ->set_help_text(__('Maximum number of guests allowed', 'blocksy-child')),
        ])
        ->add_tab(__('Pricing', 'blocksy-child'), [
            Field::make('text', 'property_nightly_rate', __('Nightly Rate ($)', 'blocksy-child'))
                ->set_required(true)
                ->set_attribute('type', 'number')
                ->set_attribute('min', '0')
                ->set_attribute('step', '1')
                ->set_help_text(__('Base nightly rate in USD', 'blocksy-child')),
        ])
        ->add_tab(__('Booking', 'blocksy-child'), [
            Field::make('text', 'property_booking_url', __('Booking URL', 'blocksy-child'))
                ->set_attribute('type', 'url')
                ->set_help_text(__('External booking URL for this property', 'blocksy-child')),
            
            Field::make('text', 'property_ical_url', __('iCal URL', 'blocksy-child'))
                ->set_attribute('type', 'url')
                ->set_help_text(__('iCal feed URL for synchronizing availability', 'blocksy-child')),
            
            Field::make('checkbox', 'property_has_direct_booking', __('Has Direct Booking', 'blocksy-child'))
                ->set_help_text(__('Check if this property can be booked directly on the site', 'blocksy-child')),
        ])
        ->add_tab(__('Gallery', 'blocksy-child'), [
            Field::make('image', 'property_featured_image', __('Featured Image', 'blocksy-child'))
                ->set_help_text(__('Main image for this property', 'blocksy-child')),
            
            Field::make('media_gallery', 'property_gallery', __('Property Gallery', 'blocksy-child'))
                ->set_type(['image'])
                ->set_help_text(__('Additional images of the property', 'blocksy-child')),
        ])
        ->add_tab(__('Features', 'blocksy-child'), [
            Field::make('checkbox', 'property_is_featured', __('Featured Property', 'blocksy-child'))
                ->set_help_text(__('Check to mark this property as featured', 'blocksy-child')),
            
            Field::make('complex', 'property_amenities_details', __('Amenity Details', 'blocksy-child'))
                ->add_fields([
                    Field::make('text', 'name', __('Amenity Name', 'blocksy-child'))
                        ->set_required(true),
                    Field::make('textarea', 'description', __('Description', 'blocksy-child')),
                    Field::make('image', 'icon', __('Icon', 'blocksy-child')),
                ])
                ->set_layout('tabbed-horizontal')
                ->set_help_text(__('Add detailed information about specific amenities', 'blocksy-child')),
        ]);
}
add_action('carbon_fields_register_fields', 'mi_register_property_fields');

/**
 * Register term meta for icons
 */
function mi_register_taxonomy_term_meta() {
    // Add term meta for icons
    Container::make('term_meta', __('Additional Details', 'blocksy-child'))
        ->where('term_taxonomy', '=', 'property_type')
        ->add_fields([
            Field::make('image', 'property_type_icon', __('Icon', 'blocksy-child'))
                ->set_help_text(__('Upload an icon for this property type', 'blocksy-child')),
            Field::make('textarea', 'property_type_description', __('Extended Description', 'blocksy-child'))
                ->set_help_text(__('A more detailed description of this property type', 'blocksy-child')),
        ]);
    
    // Add term meta for locations
    Container::make('term_meta', __('Location Details', 'blocksy-child'))
        ->where('term_taxonomy', '=', 'property_location')
        ->add_fields([
            Field::make('image', 'location_image', __('Location Image', 'blocksy-child'))
                ->set_help_text(__('Upload an image for this location', 'blocksy-child')),
            Field::make('textarea', 'location_description', __('Extended Description', 'blocksy-child'))
                ->set_help_text(__('A more detailed description of this location', 'blocksy-child')),
            Field::make('text', 'location_latitude', __('Latitude', 'blocksy-child'))
                ->set_help_text(__('Latitude coordinates for map display', 'blocksy-child')),
            Field::make('text', 'location_longitude', __('Longitude', 'blocksy-child'))
                ->set_help_text(__('Longitude coordinates for map display', 'blocksy-child')),
        ]);
    
    // Add term meta for amenities
    Container::make('term_meta', __('Amenity Details', 'blocksy-child'))
        ->where('term_taxonomy', '=', 'property_amenity')
        ->add_fields([
            Field::make('image', 'amenity_icon', __('Icon', 'blocksy-child'))
                ->set_help_text(__('Upload an icon for this amenity', 'blocksy-child')),
            Field::make('textarea', 'amenity_description', __('Extended Description', 'blocksy-child'))
                ->set_help_text(__('A more detailed description of this amenity', 'blocksy-child')),
        ]);
}
add_action('carbon_fields_register_fields', 'mi_register_taxonomy_term_meta');
